name: Spring Boot Docker CI/CD Pipeline (Rancher Desktop)

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull request to the main branch

jobs:
  build:
    runs-on: ubuntu-latest  # GitHub-hosted runner

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17 (or whichever version your project uses)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'

      # Step 3: Build Spring Boot application with Maven
      - name: Build Spring Boot App with Maven
        run: mvn clean package -DskipTests

      # Step 4: Build Docker image for Spring Boot app
      - name: Build Docker image
        run: |
          docker build -t springboot-app:latest .

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure the build step runs before deploy

    steps:
      # Step 1: Checkout the repository again
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker (containerd is included in Rancher Desktop)
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      # Step 3: Run Docker container locally using Rancher Desktop
      - name: Run Docker container locally with Rancher Desktop
        run: |
          docker run -d -p 8080:8080 springboot-app:latest

      # Step 4: Verify Docker container is running
      - name: Verify Docker container is running
        run: |
          docker ps

      # Step 5: Test if Spring Boot app is accessible
      - name: Test Spring Boot App Running
        run: |
          curl -f http://localhost:8080 || exit 1  # Test if the app is running on localhost:8080
